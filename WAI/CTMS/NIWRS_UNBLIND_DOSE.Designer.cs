//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace CTMS {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("NIWRS_UNBLIND_DOSE")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class NIWRS_UNBLIND_DOSE : global::System.Data.DataSet {
        
        private NIWRS_DATA_SPDataTable tableNIWRS_DATA_SP;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public NIWRS_UNBLIND_DOSE() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected NIWRS_UNBLIND_DOSE(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["NIWRS_DATA_SP"] != null)) {
                    base.Tables.Add(new NIWRS_DATA_SPDataTable(ds.Tables["NIWRS_DATA_SP"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NIWRS_DATA_SPDataTable NIWRS_DATA_SP {
            get {
                return this.tableNIWRS_DATA_SP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            NIWRS_UNBLIND_DOSE cln = ((NIWRS_UNBLIND_DOSE)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["NIWRS_DATA_SP"] != null)) {
                    base.Tables.Add(new NIWRS_DATA_SPDataTable(ds.Tables["NIWRS_DATA_SP"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableNIWRS_DATA_SP = ((NIWRS_DATA_SPDataTable)(base.Tables["NIWRS_DATA_SP"]));
            if ((initTable == true)) {
                if ((this.tableNIWRS_DATA_SP != null)) {
                    this.tableNIWRS_DATA_SP.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "NIWRS_UNBLIND_DOSE";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/NIWRS_UNBLIND_DOSE.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableNIWRS_DATA_SP = new NIWRS_DATA_SPDataTable();
            base.Tables.Add(this.tableNIWRS_DATA_SP);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeNIWRS_DATA_SP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            NIWRS_UNBLIND_DOSE ds = new NIWRS_UNBLIND_DOSE();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void NIWRS_DATA_SPRowChangeEventHandler(object sender, NIWRS_DATA_SPRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class NIWRS_DATA_SPDataTable : global::System.Data.TypedTableBase<NIWRS_DATA_SPRow> {
            
            private global::System.Data.DataColumn columnVISIT;
            
            private global::System.Data.DataColumn columnKITNO;
            
            private global::System.Data.DataColumn columnDISPENSEDT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NIWRS_DATA_SPDataTable() {
                this.TableName = "NIWRS_DATA_SP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal NIWRS_DATA_SPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected NIWRS_DATA_SPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VISITColumn {
                get {
                    return this.columnVISIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KITNOColumn {
                get {
                    return this.columnKITNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DISPENSEDTColumn {
                get {
                    return this.columnDISPENSEDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NIWRS_DATA_SPRow this[int index] {
                get {
                    return ((NIWRS_DATA_SPRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NIWRS_DATA_SPRowChangeEventHandler NIWRS_DATA_SPRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NIWRS_DATA_SPRowChangeEventHandler NIWRS_DATA_SPRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NIWRS_DATA_SPRowChangeEventHandler NIWRS_DATA_SPRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NIWRS_DATA_SPRowChangeEventHandler NIWRS_DATA_SPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddNIWRS_DATA_SPRow(NIWRS_DATA_SPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NIWRS_DATA_SPRow AddNIWRS_DATA_SPRow(string VISIT, string KITNO, string DISPENSEDT) {
                NIWRS_DATA_SPRow rowNIWRS_DATA_SPRow = ((NIWRS_DATA_SPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VISIT,
                        KITNO,
                        DISPENSEDT};
                rowNIWRS_DATA_SPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowNIWRS_DATA_SPRow);
                return rowNIWRS_DATA_SPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                NIWRS_DATA_SPDataTable cln = ((NIWRS_DATA_SPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new NIWRS_DATA_SPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnVISIT = base.Columns["VISIT"];
                this.columnKITNO = base.Columns["KITNO"];
                this.columnDISPENSEDT = base.Columns["DISPENSEDT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnVISIT = new global::System.Data.DataColumn("VISIT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVISIT);
                this.columnKITNO = new global::System.Data.DataColumn("KITNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKITNO);
                this.columnDISPENSEDT = new global::System.Data.DataColumn("DISPENSEDT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISPENSEDT);
                this.columnVISIT.MaxLength = 200;
                this.columnKITNO.MaxLength = 2147483647;
                this.columnDISPENSEDT.ReadOnly = true;
                this.columnDISPENSEDT.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NIWRS_DATA_SPRow NewNIWRS_DATA_SPRow() {
                return ((NIWRS_DATA_SPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new NIWRS_DATA_SPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(NIWRS_DATA_SPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NIWRS_DATA_SPRowChanged != null)) {
                    this.NIWRS_DATA_SPRowChanged(this, new NIWRS_DATA_SPRowChangeEvent(((NIWRS_DATA_SPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NIWRS_DATA_SPRowChanging != null)) {
                    this.NIWRS_DATA_SPRowChanging(this, new NIWRS_DATA_SPRowChangeEvent(((NIWRS_DATA_SPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NIWRS_DATA_SPRowDeleted != null)) {
                    this.NIWRS_DATA_SPRowDeleted(this, new NIWRS_DATA_SPRowChangeEvent(((NIWRS_DATA_SPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NIWRS_DATA_SPRowDeleting != null)) {
                    this.NIWRS_DATA_SPRowDeleting(this, new NIWRS_DATA_SPRowChangeEvent(((NIWRS_DATA_SPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveNIWRS_DATA_SPRow(NIWRS_DATA_SPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NIWRS_UNBLIND_DOSE ds = new NIWRS_UNBLIND_DOSE();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "NIWRS_DATA_SPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class NIWRS_DATA_SPRow : global::System.Data.DataRow {
            
            private NIWRS_DATA_SPDataTable tableNIWRS_DATA_SP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal NIWRS_DATA_SPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNIWRS_DATA_SP = ((NIWRS_DATA_SPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VISIT {
                get {
                    try {
                        return ((string)(this[this.tableNIWRS_DATA_SP.VISITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VISIT\' in table \'NIWRS_DATA_SP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNIWRS_DATA_SP.VISITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KITNO {
                get {
                    try {
                        return ((string)(this[this.tableNIWRS_DATA_SP.KITNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KITNO\' in table \'NIWRS_DATA_SP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNIWRS_DATA_SP.KITNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DISPENSEDT {
                get {
                    try {
                        return ((string)(this[this.tableNIWRS_DATA_SP.DISPENSEDTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DISPENSEDT\' in table \'NIWRS_DATA_SP\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNIWRS_DATA_SP.DISPENSEDTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVISITNull() {
                return this.IsNull(this.tableNIWRS_DATA_SP.VISITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVISITNull() {
                this[this.tableNIWRS_DATA_SP.VISITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKITNONull() {
                return this.IsNull(this.tableNIWRS_DATA_SP.KITNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKITNONull() {
                this[this.tableNIWRS_DATA_SP.KITNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDISPENSEDTNull() {
                return this.IsNull(this.tableNIWRS_DATA_SP.DISPENSEDTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDISPENSEDTNull() {
                this[this.tableNIWRS_DATA_SP.DISPENSEDTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class NIWRS_DATA_SPRowChangeEvent : global::System.EventArgs {
            
            private NIWRS_DATA_SPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NIWRS_DATA_SPRowChangeEvent(NIWRS_DATA_SPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NIWRS_DATA_SPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace CTMS.NIWRS_UNBLIND_DOSETableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class NIWRS_DATA_SPTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public NIWRS_DATA_SPTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "NIWRS_DATA_SP";
            tableMapping.ColumnMappings.Add("VISIT", "VISIT");
            tableMapping.ColumnMappings.Add("KITNO", "KITNO");
            tableMapping.ColumnMappings.Add("DISPENSEDT", "DISPENSEDT");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["WAD_DEV_MASTER_358ConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.NIWRS_DATA_SP";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACTION", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AND_OR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AndOr1", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AndOr2", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AndOr3", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AndOr4", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ANSWER", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COL_NAME", global::System.Data.SqlDbType.NVarChar, 2000, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CONDITION1", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition2", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition3", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition4", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Condition5", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CritCode", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Criteria", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CRITERIA_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CritName", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESCRIPTION", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DTENTERED", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ENTERED_DT", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ENTEREDBY", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ERR_MSG", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Field1", global::System.Data.SqlDbType.NVarChar, 1000, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Field2", global::System.Data.SqlDbType.NVarChar, 1000, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Field3", global::System.Data.SqlDbType.NVarChar, 1000, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Field4", global::System.Data.SqlDbType.NVarChar, 1000, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Field5", global::System.Data.SqlDbType.NVarChar, 1000, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIELDID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIELDNAME", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FormCode", global::System.Data.SqlDbType.NVarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FormHeader", global::System.Data.SqlDbType.NVarChar, 1000, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FormName", global::System.Data.SqlDbType.NVarChar, 500, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INDICATION", global::System.Data.SqlDbType.NVarChar, 2000, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INDICATION_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsApplicable", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LISTNAME", global::System.Data.SqlDbType.NVarChar, 1000, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LISTID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MODULEID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MODULENAME", global::System.Data.SqlDbType.NVarChar, 1000, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PageName", global::System.Data.SqlDbType.NVarChar, 1000, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RANDNO", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEQNO", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STATUSNAME", global::System.Data.SqlDbType.NVarChar, 2000, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STATUSCODE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STRATA", global::System.Data.SqlDbType.NVarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SITEID", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SUBSITEID", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SUBSITENAME", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TABLENAME", global::System.Data.SqlDbType.NVarChar, 2000, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UPDATED_DT", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UPDATED_USER", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Value1", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Value2", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Value3", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Value4", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Value5", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VARIABLENAME", global::System.Data.SqlDbType.NVarChar, 500, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VISIT", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VISITNUM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VISIT_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COLUMNNAME", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATA", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSERTQUERY", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UPDATEQUERY", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WHERE", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SUBJID", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STEPID", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAV_TYPE", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAV_ID", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrentDate", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OLD_KITNO", global::System.Data.SqlDbType.NVarChar, 500, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NEW_KITNO", global::System.Data.SqlDbType.NVarChar, 500, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REASON", global::System.Data.SqlDbType.NVarChar, 500, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TREAT_GRP", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TREAT_GRP_NAME", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TREAT_STRENGTH", global::System.Data.SqlDbType.NVarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(
                    NIWRS_UNBLIND_DOSE.NIWRS_DATA_SPDataTable dataTable, 
                    string ACTION, 
                    string AND_OR, 
                    string AndOr1, 
                    string AndOr2, 
                    string AndOr3, 
                    string AndOr4, 
                    string ANSWER, 
                    string COL_NAME, 
                    string CONDITION1, 
                    string Condition2, 
                    string Condition3, 
                    string Condition4, 
                    string Condition5, 
                    string CritCode, 
                    string Criteria, 
                    global::System.Nullable<int> CRITERIA_ID, 
                    string CritName, 
                    string DESCRIPTION, 
                    global::System.Nullable<global::System.DateTime> DTENTERED, 
                    global::System.Nullable<global::System.DateTime> ENTERED_DT, 
                    string ENTEREDBY, 
                    string ERR_MSG, 
                    string Field1, 
                    string Field2, 
                    string Field3, 
                    string Field4, 
                    string Field5, 
                    global::System.Nullable<int> FIELDID, 
                    string FIELDNAME, 
                    string FormCode, 
                    string FormHeader, 
                    string FormName, 
                    global::System.Nullable<long> ID, 
                    string INDICATION, 
                    global::System.Nullable<int> INDICATION_ID, 
                    global::System.Nullable<bool> IsApplicable, 
                    string LISTNAME, 
                    global::System.Nullable<long> LISTID, 
                    global::System.Nullable<int> MODULEID, 
                    string MODULENAME, 
                    string PageName, 
                    string RANDNO, 
                    global::System.Nullable<int> SEQNO, 
                    string STATUSNAME, 
                    string STATUSCODE, 
                    string STRATA, 
                    string SITEID, 
                    string SUBSITEID, 
                    string SUBSITENAME, 
                    string TABLENAME, 
                    global::System.Nullable<global::System.DateTime> UPDATED_DT, 
                    global::System.Nullable<int> UPDATED_USER, 
                    string Value1, 
                    string Value2, 
                    string Value3, 
                    string Value4, 
                    string Value5, 
                    string VARIABLENAME, 
                    string VISIT, 
                    global::System.Nullable<int> VISITNUM, 
                    global::System.Nullable<int> VISIT_ID, 
                    string COLUMNNAME, 
                    string DATA, 
                    string INSERTQUERY, 
                    string UPDATEQUERY, 
                    string WHERE, 
                    string SUBJID, 
                    string STEPID, 
                    string NAV_TYPE, 
                    string NAV_ID, 
                    string CurrentDate, 
                    string OLD_KITNO, 
                    string NEW_KITNO, 
                    string REASON, 
                    string TREAT_GRP, 
                    string TREAT_GRP_NAME, 
                    string TREAT_STRENGTH) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ACTION == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(ACTION));
            }
            if ((AND_OR == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(AND_OR));
            }
            if ((AndOr1 == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(AndOr1));
            }
            if ((AndOr2 == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(AndOr2));
            }
            if ((AndOr3 == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(AndOr3));
            }
            if ((AndOr4 == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(AndOr4));
            }
            if ((ANSWER == null)) {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = ((string)(ANSWER));
            }
            if ((COL_NAME == null)) {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = ((string)(COL_NAME));
            }
            if ((CONDITION1 == null)) {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = ((string)(CONDITION1));
            }
            if ((Condition2 == null)) {
                this.Adapter.SelectCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[10].Value = ((string)(Condition2));
            }
            if ((Condition3 == null)) {
                this.Adapter.SelectCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[11].Value = ((string)(Condition3));
            }
            if ((Condition4 == null)) {
                this.Adapter.SelectCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[12].Value = ((string)(Condition4));
            }
            if ((Condition5 == null)) {
                this.Adapter.SelectCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[13].Value = ((string)(Condition5));
            }
            if ((CritCode == null)) {
                this.Adapter.SelectCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[14].Value = ((string)(CritCode));
            }
            if ((Criteria == null)) {
                this.Adapter.SelectCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[15].Value = ((string)(Criteria));
            }
            if ((CRITERIA_ID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[16].Value = ((int)(CRITERIA_ID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((CritName == null)) {
                this.Adapter.SelectCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[17].Value = ((string)(CritName));
            }
            if ((DESCRIPTION == null)) {
                this.Adapter.SelectCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[18].Value = ((string)(DESCRIPTION));
            }
            if ((DTENTERED.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[19].Value = ((System.DateTime)(DTENTERED.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((ENTERED_DT.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[20].Value = ((System.DateTime)(ENTERED_DT.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((ENTEREDBY == null)) {
                this.Adapter.SelectCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[21].Value = ((string)(ENTEREDBY));
            }
            if ((ERR_MSG == null)) {
                this.Adapter.SelectCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[22].Value = ((string)(ERR_MSG));
            }
            if ((Field1 == null)) {
                this.Adapter.SelectCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[23].Value = ((string)(Field1));
            }
            if ((Field2 == null)) {
                this.Adapter.SelectCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[24].Value = ((string)(Field2));
            }
            if ((Field3 == null)) {
                this.Adapter.SelectCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[25].Value = ((string)(Field3));
            }
            if ((Field4 == null)) {
                this.Adapter.SelectCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[26].Value = ((string)(Field4));
            }
            if ((Field5 == null)) {
                this.Adapter.SelectCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[27].Value = ((string)(Field5));
            }
            if ((FIELDID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[28].Value = ((int)(FIELDID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((FIELDNAME == null)) {
                this.Adapter.SelectCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[29].Value = ((string)(FIELDNAME));
            }
            if ((FormCode == null)) {
                this.Adapter.SelectCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[30].Value = ((string)(FormCode));
            }
            if ((FormHeader == null)) {
                this.Adapter.SelectCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[31].Value = ((string)(FormHeader));
            }
            if ((FormName == null)) {
                this.Adapter.SelectCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[32].Value = ((string)(FormName));
            }
            if ((ID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[33].Value = ((long)(ID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((INDICATION == null)) {
                this.Adapter.SelectCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[34].Value = ((string)(INDICATION));
            }
            if ((INDICATION_ID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[35].Value = ((int)(INDICATION_ID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((IsApplicable.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[36].Value = ((bool)(IsApplicable.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((LISTNAME == null)) {
                this.Adapter.SelectCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[37].Value = ((string)(LISTNAME));
            }
            if ((LISTID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[38].Value = ((long)(LISTID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((MODULEID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[39].Value = ((int)(MODULEID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((MODULENAME == null)) {
                this.Adapter.SelectCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[40].Value = ((string)(MODULENAME));
            }
            if ((PageName == null)) {
                this.Adapter.SelectCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[41].Value = ((string)(PageName));
            }
            if ((RANDNO == null)) {
                this.Adapter.SelectCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[42].Value = ((string)(RANDNO));
            }
            if ((SEQNO.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[43].Value = ((int)(SEQNO.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((STATUSNAME == null)) {
                this.Adapter.SelectCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[44].Value = ((string)(STATUSNAME));
            }
            if ((STATUSCODE == null)) {
                this.Adapter.SelectCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[45].Value = ((string)(STATUSCODE));
            }
            if ((STRATA == null)) {
                this.Adapter.SelectCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[46].Value = ((string)(STRATA));
            }
            if ((SITEID == null)) {
                this.Adapter.SelectCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[47].Value = ((string)(SITEID));
            }
            if ((SUBSITEID == null)) {
                this.Adapter.SelectCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[48].Value = ((string)(SUBSITEID));
            }
            if ((SUBSITENAME == null)) {
                this.Adapter.SelectCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[49].Value = ((string)(SUBSITENAME));
            }
            if ((TABLENAME == null)) {
                this.Adapter.SelectCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[50].Value = ((string)(TABLENAME));
            }
            if ((UPDATED_DT.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[51].Value = ((System.DateTime)(UPDATED_DT.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((UPDATED_USER.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[52].Value = ((int)(UPDATED_USER.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Value1 == null)) {
                this.Adapter.SelectCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[53].Value = ((string)(Value1));
            }
            if ((Value2 == null)) {
                this.Adapter.SelectCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[54].Value = ((string)(Value2));
            }
            if ((Value3 == null)) {
                this.Adapter.SelectCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[55].Value = ((string)(Value3));
            }
            if ((Value4 == null)) {
                this.Adapter.SelectCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[56].Value = ((string)(Value4));
            }
            if ((Value5 == null)) {
                this.Adapter.SelectCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[57].Value = ((string)(Value5));
            }
            if ((VARIABLENAME == null)) {
                this.Adapter.SelectCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[58].Value = ((string)(VARIABLENAME));
            }
            if ((VISIT == null)) {
                this.Adapter.SelectCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[59].Value = ((string)(VISIT));
            }
            if ((VISITNUM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[60].Value = ((int)(VISITNUM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((VISIT_ID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[61].Value = ((int)(VISIT_ID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((COLUMNNAME == null)) {
                this.Adapter.SelectCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[62].Value = ((string)(COLUMNNAME));
            }
            if ((DATA == null)) {
                this.Adapter.SelectCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[63].Value = ((string)(DATA));
            }
            if ((INSERTQUERY == null)) {
                this.Adapter.SelectCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[64].Value = ((string)(INSERTQUERY));
            }
            if ((UPDATEQUERY == null)) {
                this.Adapter.SelectCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[65].Value = ((string)(UPDATEQUERY));
            }
            if ((WHERE == null)) {
                this.Adapter.SelectCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[66].Value = ((string)(WHERE));
            }
            if ((SUBJID == null)) {
                this.Adapter.SelectCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[67].Value = ((string)(SUBJID));
            }
            if ((STEPID == null)) {
                this.Adapter.SelectCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[68].Value = ((string)(STEPID));
            }
            if ((NAV_TYPE == null)) {
                this.Adapter.SelectCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[69].Value = ((string)(NAV_TYPE));
            }
            if ((NAV_ID == null)) {
                this.Adapter.SelectCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[70].Value = ((string)(NAV_ID));
            }
            if ((CurrentDate == null)) {
                this.Adapter.SelectCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[71].Value = ((string)(CurrentDate));
            }
            if ((OLD_KITNO == null)) {
                this.Adapter.SelectCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[72].Value = ((string)(OLD_KITNO));
            }
            if ((NEW_KITNO == null)) {
                this.Adapter.SelectCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[73].Value = ((string)(NEW_KITNO));
            }
            if ((REASON == null)) {
                this.Adapter.SelectCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[74].Value = ((string)(REASON));
            }
            if ((TREAT_GRP == null)) {
                this.Adapter.SelectCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[75].Value = ((string)(TREAT_GRP));
            }
            if ((TREAT_GRP_NAME == null)) {
                this.Adapter.SelectCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[76].Value = ((string)(TREAT_GRP_NAME));
            }
            if ((TREAT_STRENGTH == null)) {
                this.Adapter.SelectCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[77].Value = ((string)(TREAT_STRENGTH));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NIWRS_UNBLIND_DOSE.NIWRS_DATA_SPDataTable GetData(
                    string ACTION, 
                    string AND_OR, 
                    string AndOr1, 
                    string AndOr2, 
                    string AndOr3, 
                    string AndOr4, 
                    string ANSWER, 
                    string COL_NAME, 
                    string CONDITION1, 
                    string Condition2, 
                    string Condition3, 
                    string Condition4, 
                    string Condition5, 
                    string CritCode, 
                    string Criteria, 
                    global::System.Nullable<int> CRITERIA_ID, 
                    string CritName, 
                    string DESCRIPTION, 
                    global::System.Nullable<global::System.DateTime> DTENTERED, 
                    global::System.Nullable<global::System.DateTime> ENTERED_DT, 
                    string ENTEREDBY, 
                    string ERR_MSG, 
                    string Field1, 
                    string Field2, 
                    string Field3, 
                    string Field4, 
                    string Field5, 
                    global::System.Nullable<int> FIELDID, 
                    string FIELDNAME, 
                    string FormCode, 
                    string FormHeader, 
                    string FormName, 
                    global::System.Nullable<long> ID, 
                    string INDICATION, 
                    global::System.Nullable<int> INDICATION_ID, 
                    global::System.Nullable<bool> IsApplicable, 
                    string LISTNAME, 
                    global::System.Nullable<long> LISTID, 
                    global::System.Nullable<int> MODULEID, 
                    string MODULENAME, 
                    string PageName, 
                    string RANDNO, 
                    global::System.Nullable<int> SEQNO, 
                    string STATUSNAME, 
                    string STATUSCODE, 
                    string STRATA, 
                    string SITEID, 
                    string SUBSITEID, 
                    string SUBSITENAME, 
                    string TABLENAME, 
                    global::System.Nullable<global::System.DateTime> UPDATED_DT, 
                    global::System.Nullable<int> UPDATED_USER, 
                    string Value1, 
                    string Value2, 
                    string Value3, 
                    string Value4, 
                    string Value5, 
                    string VARIABLENAME, 
                    string VISIT, 
                    global::System.Nullable<int> VISITNUM, 
                    global::System.Nullable<int> VISIT_ID, 
                    string COLUMNNAME, 
                    string DATA, 
                    string INSERTQUERY, 
                    string UPDATEQUERY, 
                    string WHERE, 
                    string SUBJID, 
                    string STEPID, 
                    string NAV_TYPE, 
                    string NAV_ID, 
                    string CurrentDate, 
                    string OLD_KITNO, 
                    string NEW_KITNO, 
                    string REASON, 
                    string TREAT_GRP, 
                    string TREAT_GRP_NAME, 
                    string TREAT_STRENGTH) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ACTION == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(ACTION));
            }
            if ((AND_OR == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(AND_OR));
            }
            if ((AndOr1 == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(AndOr1));
            }
            if ((AndOr2 == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(AndOr2));
            }
            if ((AndOr3 == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(AndOr3));
            }
            if ((AndOr4 == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(AndOr4));
            }
            if ((ANSWER == null)) {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = ((string)(ANSWER));
            }
            if ((COL_NAME == null)) {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = ((string)(COL_NAME));
            }
            if ((CONDITION1 == null)) {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = ((string)(CONDITION1));
            }
            if ((Condition2 == null)) {
                this.Adapter.SelectCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[10].Value = ((string)(Condition2));
            }
            if ((Condition3 == null)) {
                this.Adapter.SelectCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[11].Value = ((string)(Condition3));
            }
            if ((Condition4 == null)) {
                this.Adapter.SelectCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[12].Value = ((string)(Condition4));
            }
            if ((Condition5 == null)) {
                this.Adapter.SelectCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[13].Value = ((string)(Condition5));
            }
            if ((CritCode == null)) {
                this.Adapter.SelectCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[14].Value = ((string)(CritCode));
            }
            if ((Criteria == null)) {
                this.Adapter.SelectCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[15].Value = ((string)(Criteria));
            }
            if ((CRITERIA_ID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[16].Value = ((int)(CRITERIA_ID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((CritName == null)) {
                this.Adapter.SelectCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[17].Value = ((string)(CritName));
            }
            if ((DESCRIPTION == null)) {
                this.Adapter.SelectCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[18].Value = ((string)(DESCRIPTION));
            }
            if ((DTENTERED.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[19].Value = ((System.DateTime)(DTENTERED.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((ENTERED_DT.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[20].Value = ((System.DateTime)(ENTERED_DT.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((ENTEREDBY == null)) {
                this.Adapter.SelectCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[21].Value = ((string)(ENTEREDBY));
            }
            if ((ERR_MSG == null)) {
                this.Adapter.SelectCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[22].Value = ((string)(ERR_MSG));
            }
            if ((Field1 == null)) {
                this.Adapter.SelectCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[23].Value = ((string)(Field1));
            }
            if ((Field2 == null)) {
                this.Adapter.SelectCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[24].Value = ((string)(Field2));
            }
            if ((Field3 == null)) {
                this.Adapter.SelectCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[25].Value = ((string)(Field3));
            }
            if ((Field4 == null)) {
                this.Adapter.SelectCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[26].Value = ((string)(Field4));
            }
            if ((Field5 == null)) {
                this.Adapter.SelectCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[27].Value = ((string)(Field5));
            }
            if ((FIELDID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[28].Value = ((int)(FIELDID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((FIELDNAME == null)) {
                this.Adapter.SelectCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[29].Value = ((string)(FIELDNAME));
            }
            if ((FormCode == null)) {
                this.Adapter.SelectCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[30].Value = ((string)(FormCode));
            }
            if ((FormHeader == null)) {
                this.Adapter.SelectCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[31].Value = ((string)(FormHeader));
            }
            if ((FormName == null)) {
                this.Adapter.SelectCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[32].Value = ((string)(FormName));
            }
            if ((ID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[33].Value = ((long)(ID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((INDICATION == null)) {
                this.Adapter.SelectCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[34].Value = ((string)(INDICATION));
            }
            if ((INDICATION_ID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[35].Value = ((int)(INDICATION_ID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((IsApplicable.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[36].Value = ((bool)(IsApplicable.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((LISTNAME == null)) {
                this.Adapter.SelectCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[37].Value = ((string)(LISTNAME));
            }
            if ((LISTID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[38].Value = ((long)(LISTID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((MODULEID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[39].Value = ((int)(MODULEID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((MODULENAME == null)) {
                this.Adapter.SelectCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[40].Value = ((string)(MODULENAME));
            }
            if ((PageName == null)) {
                this.Adapter.SelectCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[41].Value = ((string)(PageName));
            }
            if ((RANDNO == null)) {
                this.Adapter.SelectCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[42].Value = ((string)(RANDNO));
            }
            if ((SEQNO.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[43].Value = ((int)(SEQNO.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((STATUSNAME == null)) {
                this.Adapter.SelectCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[44].Value = ((string)(STATUSNAME));
            }
            if ((STATUSCODE == null)) {
                this.Adapter.SelectCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[45].Value = ((string)(STATUSCODE));
            }
            if ((STRATA == null)) {
                this.Adapter.SelectCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[46].Value = ((string)(STRATA));
            }
            if ((SITEID == null)) {
                this.Adapter.SelectCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[47].Value = ((string)(SITEID));
            }
            if ((SUBSITEID == null)) {
                this.Adapter.SelectCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[48].Value = ((string)(SUBSITEID));
            }
            if ((SUBSITENAME == null)) {
                this.Adapter.SelectCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[49].Value = ((string)(SUBSITENAME));
            }
            if ((TABLENAME == null)) {
                this.Adapter.SelectCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[50].Value = ((string)(TABLENAME));
            }
            if ((UPDATED_DT.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[51].Value = ((System.DateTime)(UPDATED_DT.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((UPDATED_USER.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[52].Value = ((int)(UPDATED_USER.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Value1 == null)) {
                this.Adapter.SelectCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[53].Value = ((string)(Value1));
            }
            if ((Value2 == null)) {
                this.Adapter.SelectCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[54].Value = ((string)(Value2));
            }
            if ((Value3 == null)) {
                this.Adapter.SelectCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[55].Value = ((string)(Value3));
            }
            if ((Value4 == null)) {
                this.Adapter.SelectCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[56].Value = ((string)(Value4));
            }
            if ((Value5 == null)) {
                this.Adapter.SelectCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[57].Value = ((string)(Value5));
            }
            if ((VARIABLENAME == null)) {
                this.Adapter.SelectCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[58].Value = ((string)(VARIABLENAME));
            }
            if ((VISIT == null)) {
                this.Adapter.SelectCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[59].Value = ((string)(VISIT));
            }
            if ((VISITNUM.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[60].Value = ((int)(VISITNUM.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((VISIT_ID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[61].Value = ((int)(VISIT_ID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((COLUMNNAME == null)) {
                this.Adapter.SelectCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[62].Value = ((string)(COLUMNNAME));
            }
            if ((DATA == null)) {
                this.Adapter.SelectCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[63].Value = ((string)(DATA));
            }
            if ((INSERTQUERY == null)) {
                this.Adapter.SelectCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[64].Value = ((string)(INSERTQUERY));
            }
            if ((UPDATEQUERY == null)) {
                this.Adapter.SelectCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[65].Value = ((string)(UPDATEQUERY));
            }
            if ((WHERE == null)) {
                this.Adapter.SelectCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[66].Value = ((string)(WHERE));
            }
            if ((SUBJID == null)) {
                this.Adapter.SelectCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[67].Value = ((string)(SUBJID));
            }
            if ((STEPID == null)) {
                this.Adapter.SelectCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[68].Value = ((string)(STEPID));
            }
            if ((NAV_TYPE == null)) {
                this.Adapter.SelectCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[69].Value = ((string)(NAV_TYPE));
            }
            if ((NAV_ID == null)) {
                this.Adapter.SelectCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[70].Value = ((string)(NAV_ID));
            }
            if ((CurrentDate == null)) {
                this.Adapter.SelectCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[71].Value = ((string)(CurrentDate));
            }
            if ((OLD_KITNO == null)) {
                this.Adapter.SelectCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[72].Value = ((string)(OLD_KITNO));
            }
            if ((NEW_KITNO == null)) {
                this.Adapter.SelectCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[73].Value = ((string)(NEW_KITNO));
            }
            if ((REASON == null)) {
                this.Adapter.SelectCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[74].Value = ((string)(REASON));
            }
            if ((TREAT_GRP == null)) {
                this.Adapter.SelectCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[75].Value = ((string)(TREAT_GRP));
            }
            if ((TREAT_GRP_NAME == null)) {
                this.Adapter.SelectCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[76].Value = ((string)(TREAT_GRP_NAME));
            }
            if ((TREAT_STRENGTH == null)) {
                this.Adapter.SelectCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[77].Value = ((string)(TREAT_STRENGTH));
            }
            NIWRS_UNBLIND_DOSE.NIWRS_DATA_SPDataTable dataTable = new NIWRS_UNBLIND_DOSE.NIWRS_DATA_SPDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(NIWRS_UNBLIND_DOSE dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(NIWRS_UNBLIND_DOSE dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(NIWRS_UNBLIND_DOSE dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(NIWRS_UNBLIND_DOSE dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591